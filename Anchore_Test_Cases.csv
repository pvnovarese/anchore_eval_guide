s,Category,Requirement,Test Actions,Expected Result,Additional Comment
#1,Compliance/Information Security,Containers should not be allowed to run as root or docker as specified in section 4.1 of CIS benchmark,"1) Build a docker image that contains a root user 
2) Create a Policy Action in Anchore to monitor for ""root"" as the effective user in the Dockerfile","Container should generate a ""STOP"" action and flag the ""root"" user as being the effective user in the UI",
#2,Compliance/Information Security,"Containers should comply with an organizations ports, protocols, and services matrix. Ports 22, 80, 443, should be blacklisted by default to limit attacks. This is specified in section 5.8 of CIS benchmark","1) Build a container using EXPOSE 22, 80, 443 
2) Create a Policy Action in Anchore to monitor for exposed ports of 22, 80, 43. You can add additional ports as they pertain to your organization","Container should generate a ""STOP"" action and flag the exposed ports in the UI",
#3,Compliance/Information Security,Containers should not contain secrets in container images. This is specified in section 4.10 of CIS benchmark,"1) Create a container containing a secret. This can be tested securely by pulling down a software package that may have test harness keys or by using a fake key to stuff in a container. 
2) In your policy select ""secret scans"" under gate and monitor for any secrets.  You can craft a custom regex to monitor for a specific secret if needed. By default  Anchore monitors for things like 'AWS_ACCESS_KEY', 'AWS_SECRET_KEY', 'PRIV_KEY', 'DOCKER_AUTH', 'API_KEY']. ","Container should generate a ""STOP"" action and flag the exposed secrets in the UI that are found in the container",
#4,Compliance/Information Security,Check for permissions set on files in the container image. This is specified in section 4.8 of CIS Benchmark.,"1) Customer can build image using UBI7/UBI8 to see permissions/suid set on various files. 
2) Scan an UBI7/UBI8 to view suid/uid","Container should generate a ""STOP"" action and flag the suid set on files in the UI that are found in the container",
#5,Compliance/Information Security,Check image for HEALTHCHECK. Docker CIS benchmark indicates images should have a healthcheck enabled.,"1) Build an image that does not contain a healthcheck 
2) Create a Policy Check that validates healthcheck enforcement. 
2a) Select dockerfile gate under ""gate"" 
2b) instruction under ""trigger"" 
2c) select ""healthcheck"" under instruction 
2d) select ""not exists"" under check 
2e) close the additional two boxes 
2f) select ""stop"" in bottom left h)save and close","Container should generate a ""STOP"" action and flag the HEALTHCHECK in the UI ",
#6,Compliance/Information Security,Check image for a blacklisted package (the package to blacklist can be dependent on the organization). A container security tool should be capable of whitelisting/blacklisting packages,"1) For this example, Build an image that contains the nmap package. Nmap is commonly used for network recon in cyber attacks. On a RHEL based image, add RUN yum install -y nmap to your dockerfile and build your image. 
2) In your Anchore Policy, select ""packages"" gate, then select ""blacklist"" trigger, and specify the ""nmap"" in name of the package. You can delete the additional ""version"" box. This validates that ALL versions of nmap are blacklisted. ","Container should generate a ""STOP"" action and flag NMAP as a blacklisted package",
#7,Information Security,Check for calls out of the Dockerfile to download software externally,"1) Create an image with a curl, git clone, or wget command to check for calls out to the internet for software downloads. 2) Create a check in Anchore policy using Dockerfile instruction gates/triggers.","Container should generate a ""STOP"" action on the dockerfile instructions",
#8,Information Security,Blacklist malicious images from your environment,"1) Add an image to your blacklisted images. You can do this using the ""whitelisted/blacklisted"" images tab within Anchore Policy Tab","Container should generate a ""STOP"" action on the image and list the image as ""Blacklisted"" in the ""Compliance"" Tab of the UI",
#9,Information Security,Build from trusted parent/base images. ,"1) Validate the ""FROM"" line instruction to generate a warning if the trusted parent image is not used","Container should generate a ""STOP"" action in UI when detects anything other than your trusted parent image",
#10,Information Security,Flag and alert for all vulnerabilities that are greater than or equal to a medium. This requirement is discussed in various CIS/NIST requirements around vulnerability scanning,"1) Create a policy in Anchore UI using the ""vulnerabilities"" gate and the ""package"" trigger, select "">="" in severity comparison, select ""medium"" for severity. 
2) Scan an image that has medium or higher vulnerabilities. There are many to choose from in dockerhub ","Container should generate a ""STOP"" action in UI when detects any vulnerabilities ",